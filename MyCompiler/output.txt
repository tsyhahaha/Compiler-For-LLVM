declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

define dso_local void @funa() #0 {
	ret void
}
define dso_local i32 @funb(i32) #0 {
	%2 = alloca i32
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = load i32, i32* %3
	store i32 %4, i32* %2
	br label %5
%5:
	%6 = load i32, i32* %2
	ret i32 %6
}
define dso_local void @func(i32, i32, i32) #0 {
	%4 = alloca i32
	%5 = alloca i32
	%6 = alloca i32
	store i32 %0, i32* %6
	store i32 %1, i32* %5
	store i32 %2, i32* %4
	br label %7
%7:
	ret void
}
define dso_local i32 @if_else_fun(i32) #0 {
	%2 = alloca i32
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	%5 = alloca i32
	store i32 2, i32* %5
	%6 = load i32, i32* %3
	store i32 %6, i32* %4
	%7 = load i32, i32* %4
	%8 = load i32, i32* %4
	%9 = icmp eq i32 %8, 1
	br i1 %9, label %10, label %11
%10:
	store i32 1, i32* %5
	br label %11
%11:
	%12 = load i32, i32* %4
	%13 = icmp eq i32 %12, 2
	br i1 %13, label %14, label %15
%14:
	br label %16
%15:
	store i32 4, i32* %5
	br label %16
%16:
	store i32 4, i32* %2
	br label %17
%17:
	%18 = load i32, i32* %2
	ret i32 %18
}
define dso_local i32 @while_fun(i32) #0 {
	%2 = alloca i32
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 1, i32* %4
	%5 = alloca i32
	%6 = load i32, i32* %3
	store i32 %6, i32* %5
	br label %7
%7:
	%8 = load i32, i32* %5
	%9 = icmp sgt i32 %8, 0
	br i1 %9, label %10, label %24
%10:
	%11 = load i32, i32* %5
	%12 = sub i32 %11, 1
	store i32 %12, i32* %5
	%13 = load i32, i32* %5
	%14 = srem i32 %13, 2
	%15 = icmp ne i32 %14, 1
	br i1 %15, label %16, label %17
%16:
	br label %24
%17:
	%18 = load i32, i32* %5
	%19 = load i32, i32* %3
	%20 = sdiv i32 %19, 2
	%21 = icmp sle i32 %18, %20
	br i1 %21, label %22, label %23
%22:
	br label %24
%23:
	br label %7
%24:
	%25 = load i32, i32* %5
	store i32 %25, i32* %2
	br label %26
%26:
	%27 = load i32, i32* %2
	ret i32 %27
}

define dso_local i32 @main() #0 {
	%1 = alloca i32
	call void @putch(i32 50)
	call void @putch(i32 48)
	call void @putch(i32 51)
	call void @putch(i32 55)
	call void @putch(i32 51)
	call void @putch(i32 51)
	call void @putch(i32 56)
	call void @putch(i32 48)
	call void @putch(i32 10)
	%2 = alloca i32
	store i32 1, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	store i32 2, i32* %4
	%5 = alloca i32
	store i32 3, i32* %5
	%6 = alloca i32
	store i32 1, i32* %6
	%7 = alloca i32
	%8 = alloca i32
	%9 = call i32 @getint()
	store i32 %9, i32* %7
	store i32 1, i32* %8
	store i32 0, i32* %null
	store i32 0, i32* %null
	call void @funa()
	%10 = call i32 @funb(i32 1)
	call void @func(i32 1, i32 0, i32 0)
	store i32 1, i32* %null
	store i32 3, i32* %null
	store i32 -1, i32* %null
	store i32 2, i32* %null
	store i32 0, i32* %null
	store i32 1, i32* %null
	store i32 1, i32* %null
	store i32 -1, i32* %null
	store i32 1, i32* %null
	%11 = load i32, i32* %8
	%12 = sub i32 0, %11
	store i32 %12, i32* %null
	store i32 0, i32* %null
	store i32 1, i32* %null
	store i32 0, i32* %null
	store i32 1, i32* %null
	store i32 0, i32* %null
	call void @putch(i32 50)
	call void @putch(i32 10)
	call void @putch(i32 51)
	call void @putch(i32 10)
	call void @putch(i32 52)
	call void @putch(i32 10)
	call void @putch(i32 53)
	call void @putch(i32 10)
	call void @putch(i32 54)
	call void @putch(i32 10)
	call void @putch(i32 55)
	call void @putch(i32 10)
	call void @putch(i32 56)
	call void @putch(i32 10)
	call void @putch(i32 57)
	call void @putch(i32 10)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 10)
	store i32 0, i32* %1
	br label %13
%13:
	%14 = load i32, i32* %1
	ret i32 %14
}

